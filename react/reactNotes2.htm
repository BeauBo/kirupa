
<!DOCTYPE html>
<html>

<head>
  <title>React! React! React!</title>
  <script src="https://fb.me/react-15.0.0-rc.2.js"></script>
  <script src="https://fb.me/react-dom-15.0.0-rc.2.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <style>
    body {
      padding: 50px;
      background-color: #66CCFF;
      font-family: sans-serif;
    }
	  #logo {
		  margin: 0 auto;
   		  display: inherit;
		  margin-bottom: 20px;
	  }
    .todoListMain .header input {
      padding: 10px;
      font-size: 16px;
      border: 2px solid #FFF;
	  width: calc(100% - 87px);
    }
    .todoListMain .header button {
      padding: 10px;
      font-size: 16px;
      margin: 10px;
      background-color: #0066FF;
      color: #FFF;
      border: 2px solid #0066FF;
	  margin-right: 0;
    }

    .todoListMain .header button:hover {
      background-color: #003399;
      border: 2px solid #003399;
      cursor: pointer;
    }

    .todoListMain .theList {
      list-style: none;
      padding-left: 0;
      width: 100%;
    }

    .todoListMain .theList li {
      color: #333;
      background-color: rgba(255,255,255,.5);
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 5px;
    }
    .todoListMain .header button.recordButton {
        border-radius: 50%;
        background-color: red;
        border-color: crimson;
        border-width: 5px;
        padding: 6px;
    }
    .todoListMain .header button.recordButton {
        border-radius: 50%;
        background-color: #FFF;
        border-color: #333;
        border-width: 3px;
        padding: 6px;
        left: 15px;
        top: 167px;
        position: absolute;
    }
    .todoListMain .header button.recordButton:disabled {
        background-color: #FFF;
        border-color: red;
        border-width: 5px;
        animation: bounce 1s ease-in-out infinite;
    }

    @keyframes bounce {
        0% {
            transform: translate3d(0px, 0px, 0);
        }
        25% {
            transform: translate3d(0px, 4px, 0);
        }
        50% {
            transform: translate3d(0px, 0px, 0);
        }
        75% {
            transform: translate3d(0px, -4px, 0);
        }
        100% {
            transform: translate3d(0px, 0px, 0);
        }
    }

  </style>
</head>

<body>
 <img id="logo" src="reactNotesLogo_144.png" width="400" alt=""/>
<div id="container"></div>

<script type="text/babel">
    //
    // React Code
    //
    var destination = document.querySelector("#container");

    var TodoItems = React.createClass({
      render: function() {
        var todoEntries = this.props.entries;

        var listItems = [];

        for (var i = 0; i < todoEntries.length; i++) {
          var entry = todoEntries[i];
          listItems.push(<li key={"item" + i}>{entry}</li>);
        }

        return (
          <ul className="theList">
            {listItems}
          </ul>
        );
      }
    });

    var TodoList = React.createClass({
      getInitialState: function() {
        return {
          items: [],
          textValue: ""
        };
      },
      updateValue: function(e) {
        if (dictatedText == "") {
            console.log("adding input value: " + e.target.value);
            this.setState({
                textValue: e.target.value
            });
        } else {
            console.log("adding value: " + dictatedText);
            this.setState({
              textValue: dictatedText
            });
        }
      },
      addItemEnter: function(e) {
        if (e.key == "Enter") {
            this.addItem();
        }
      },
      addItem: function(e) {
        var itemArray = this.state.items;
        itemArray.push(this.state.textValue);

        this.setState({
          items: itemArray
        });

        this._inputElement.value = "";
      },
      startRecording: function(e) {
        console.log("recording started!");
        dictateFn();
        this._recordingElement.disabled = true;
      },
      render: function() {
           var recordElement;
           if (typeof Windows !== "undefined") {
               recordElement = (
                    <button ref={(a) => this._recordingElement = a} onClick={this.startRecording} className="recordButton"></button>
                );
            }
          return (
            <div className="todoListMain">
              <div className="header">
                {recordElement}
                <input className="textInput" ref={(a) => this._inputElement = a}
                       onKeyPress={this.addItemEnter}
                       placeholder="enter task"
                       onChange={this.updateValue}>
                </input>
                <button onClick={this.addItem}>add</button>
              </div>
              <TodoItems entries={this.state.items}/>
            </div>
          );
        }
    });

    ReactDOM.render((
      <div>
        <TodoList/>
      </div>
    ), destination);
  </script>

  <script src="speech.js"></script>
</body>

</html>